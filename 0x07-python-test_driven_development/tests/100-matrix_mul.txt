===================================
Test for module 100-matrix_mul.py
===================================

This tests only one function: ``matrix_mul(matrix_a, matrix_b)``.

Matrix
=========

empty matrix
------------

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> m_a = [[1, 2, 3], []]
>>> m_b = [[3, 4], [5, 6], [7, 8]]
>>> matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty


>>> m_a = [[1, 2, 3], [1, 2, 3]]
>>> m_b = [[]]
>>> matrix_mul(m_a, m_b)           
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty


List or matrix type
===================
>>> m_a = [[1, 2, 3], (1, 2, 3)]
>>> m_b = [[3, 4], [5, 6], [7, 8]]
>>> matrix_mul(m_a, m_b)           
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists


>>> m_a = [[1, 2, 3], [1, 2, 3]]
>>> m_b = ([3, 4], [5, 6], [7, 8])
>>> matrix_mul(m_a, m_b)           
Traceback (most recent call last):
    ...
TypeError: m_b must be a list


Element type in list
====================
>>> m_a = [[1, 2, 3], ["2", 3, 6]]
>>> m_b = [[3, 4], [5, 6], [7, 8]]
>>> matrix_mul(m_a, m_b)           
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats


>>> m_a = [[1, 2, 3], [1, 2, 2]]
>>> m_b = [[3, 4], [5, 6], [[2, 3], 8]]
>>> matrix_mul(m_a, m_b)           
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats



>>> m_a = [[1, 2, 3], [1, 2, 3, 4]]
>>> m_b = [[3, 4], [5, 6], [7, 8]]
>>> matrix_mul(m_a, m_b)           
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size


>>> m_a = [[1, 2, 3], [1, 2, 3]]
>>> m_b = [[3], [5, 6], [7, 8]]
>>> matrix_mul(m_a, m_b)           
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size



>>> m_a = [[1, 2, 3, 7], [1, 3, 5, 6]]
>>> m_b = [[3, 4], [5, 6], [7, 8]]
>>> matrix_mul(m_a, m_b)           
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied



>>> m_a = [[1, 2, 3], [1, 2.5, 5]]
>>> m_b = [[3, 4], [5, 6], [7, 8], [6.8, 5.5]]
>>> matrix_mul(m_a, m_b)           
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied




Ideal cases
===========

>>> m_a = [[1, 2, 3, 4], [4, 5, 6, 7]]
>>> m_b = [[3, 4], [5, 6], [7, 8], [1, 2]]
>>> matrix_mul(m_a, m_b)
[[38, 48], [86, 108]]


>>> m_a = [[1.3, 2.7, 3.2, 4.5], [4, 5, 6, 7]]
>>> m_b = [[3, 4], [5, 6.675], [7, 8.76], [1.0, 2.8]]
>>> matrix_mul(m_a, m_b)
[[44.3, 63.8545], [86.0, 121.535]]



>>> m_a = [[13, 27, 33, 40], [49, 53, 67, 71], [10, 20, 54, 78]]
>>> m_b = [[33, 44], [23, 54], [77, 86], [10, 28]]
>>> matrix_mul(m_a, m_b)
[[3991, 5988], [8705, 12768], [5728, 8348]]
